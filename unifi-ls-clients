#!/usr/bin/env python

import argparse

from unifi.controller import Controller

parser = argparse.ArgumentParser()
parser.add_argument('-c', '--controller', default='unifi', help='the controller address (default "unifi")')
parser.add_argument('-u', '--username', default='admin', help='the controller username (default("admin")')
parser.add_argument('-p', '--password', default='', help='the controller password')
parser.add_argument('-b', '--port', default='8443', help='the controller port (default "8443")')
parser.add_argument('-v', '--version', default='v2', help='the controller base version (default "v2")')
parser.add_argument('-s', '--siteid', default='default', help='the site ID, UniFi >=3.x only (default "default")')
args = parser.parse_args()

c = Controller(args.controller, args.username, args.password, args.port, args.version, args.siteid)

aps = c.get_aps()
ap_names = dict([(ap['mac'], ap.get('name')) for ap in aps])
clients = c.get_clients()

FORMAT = '%-32s  %18s  %-15s %-16s %-20s %5s %5s %3s %3s'
print(FORMAT % ('NAME', 'MAC', 'IP ADDRESS', 'NETWORK', 'AP', 'CHAN', 'RSSI', 'RX', 'TX'))
for client in clients:
    name = client.get('name') or client.get('hostname') or client.get('ip', 'Unknown')
    mac = client['mac']
    ip = client.get('ip', 'Unknown')
    network = client.get('network')

    ap_name, rssi, rx, tx, channel = ("",)*5 
    is_wired = client.get('is_wired', True)
    if not is_wired:
       ap_name = ap_names[client['ap_mac']]
       rssi = client['rssi']
       rx = int(client['rx_rate'] / 1000)
       tx = int(client['tx_rate'] / 1000)
       channel = client['channel']

    print(FORMAT % (name, mac, ip, network, ap_name, channel, rssi, rx, tx))
